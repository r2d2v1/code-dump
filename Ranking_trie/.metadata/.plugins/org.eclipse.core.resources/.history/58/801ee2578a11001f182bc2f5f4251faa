/*
 * Rank.h
 *
 *  Created on: Feb 4, 2010
 *      Author: vijay
 */

#ifndef RANK_H_
#define RANK_H_
#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>
#include <map>
#include <set>
#include <list>
#include "input.h"

using namespace std;

class Rank{

public:

	static vector<long> rankList;
	Rank();
	virtual ~Rank();

	struct cmp_list {
	    bool operator()(const std::list<long> *a, const std::list<long> *b) const {
	        return Rank::rankList[a->front()] < Rank::rankList[b->front()];
	    }
	};

	//bool cmp_list(std::list<long> *a, std::list<long> *b);
	void merge_sorted_lists(std::list<long> output, std::list<std::list<long> > &input);

	void top5rank(list<long>& output,list<list<long> > &result);

};
//string rankFile;
//rankFile.append("/home/vijay/workplace/Resources/ranking.txt");
//if(existFile(rankFile)){
vector<long> tmp;
readBin(tmp,"/home/vijay/workplace/Resources/ranking.txt");
//}


#endif /* RANK_H_ */
